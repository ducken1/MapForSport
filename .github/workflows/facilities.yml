name: Run Unit Tests for Facilities

on:
  push:
    branches:
      - master
      - main  # Include main branch as well
  pull_request:
    branches:
      - master
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    # Add service container for MongoDB (cleaner approach)
    services:
      mongodb:
        image: mongo:5.0  # Use specific version for consistency
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4  # Updated to latest version

      - name: Set up Node.js
        uses: actions/setup-node@v4  # Updated to latest version
        with:
          node-version: '18'  # Updated to more recent LTS version
          # Remove cache option until lock file is present
          # cache: 'npm'

      - name: Install dependencies
        run: npm install  # Use npm install instead of npm ci if no lock file
        working-directory: ./

      - name: Wait for MongoDB to be ready
        run: |
          until mongosh --host localhost --port 27017 --eval "db.runCommand({ping: 1})" > /dev/null 2>&1; do
            echo "Waiting for MongoDB to be ready..."
            sleep 2
          done
          echo "MongoDB is ready!"

      - name: Run linting (if applicable)
        run: npm run lint
        working-directory: ./
        continue-on-error: false  # Make linting mandatory

      - name: Run facility tests
        run: npx jest services/facility/test/facility.test.js --verbose --coverage
        env:
          NODE_ENV: test
          # Add any environment variables your tests need
          MONGODB_URI: mongodb://localhost:27017/test_db

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: success()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

      - name: Clean up
        if: always()
        run: |
          # Clean up test data if needed
          echo "Cleaning up test artifacts..."